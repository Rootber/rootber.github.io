---
title: DOG
date: 2025-06-02 09:17:00 -0500
categories: [Machines, labs]
tags: [hack the box, easy, rce, git, git-dumper, nmap]     # TAG names should always be lowercase
author: Rootber
description: >- 
 La máquina Dog de Hack The Box, parte de la Temporada 7, es un desafío de nivel fácil que combina enumeración, explotación de vulnerabilidades en un CMS y escalamiento de privilegios en un entorno Linux. En este write-up, les explicare como es que obtube las flags del usuario y root, destacando el uso de git-dumper para extraer un repositorio Git expuesto y acceder a las credenciales críticas.

layout: post
---
<style>
.post-content img {
    width: 100%;
    max-width: 800px;
    height: auto;
}
</style>

## Empezando con la maquina

Primero realizamos un escaneo de puertos con `nmap -sC --min-rate 5000 10.10.11.58`, el parametro `-sC` indicamos que nmap realize un scaneo los scipts por defecto, pueden encontrar mas informacion de los scripts que que estan incluidos en la [Documentación de Nmap NSE](https://nmap.org/book/nse-usage.html), dicha opcion es algo agresiva, en caso de realizarse en un entorno de trabajo real lo ideal es tratar de evitar usarlo ya que puede que el firewall o waf nos restrinja la conección, con el parametro `—min-rate 5000` indicamos que como minimo se envien 5000 paquetes por segundo, esto también es una opcion muy agresiva; dado que la maquina es easy, dudo que hayan politicas que bloqueen nuestra conección al realizar un escaneo tan agresivo.

![scaneo con nmap](/assets/img/dog/nmap.png)
_Escaneo con nmap_

Vemos que tenemos abierto los puertos 22 y 80 que son usados por defecto por el protocolo ssh y el el protocolo http respectivamente; tambien vemos que tiene la ruta `/.git`, esto es interesante debido a que dentro podemos encontrar el contenido del proyecto, asi como el historial de versiones, historial de commits, ramas y configuraciones.

Nos dirigimos a la pagina web a travez del puerto 80, vemos que la pagina web usa el CMS de Backdrop y que tambien tiene un portal de login.

![Portal de la pagina web](/assets/img/dog/pagina_princial.png)
_Portal principal de la pagina web_


![Portal de la pagina web](/assets/img/dog/pagina_principal_bottom.png)
_Parte final de la pagina web_


Ahora dumpearemos el `.git` para poder gestionarlo haciendo uso de `git`, para ello usamos el comando `git-dumper https://10.10.11.58/.git/ dog-dump`, `dog-dump` es el nombre de la carpeta en donde se reconstruira el `.git`, puede ser cualquier nombre que queramos, en caso de que la carpeta no exista, esta sera creada.  

![Git Dumper](/assets/img/dog/git-dumper1.png)
_git-dumper_

Luego de unos minutos vemos que se ha terminado de reconstruir el `.git`, dentro de la carpeta que hemos especificado previamente.
![Git Dumper final](/assets/img/dog/git-dumper2.png)
_dog-dump es la carpeta en donde se ha reconstruido el .git_

Dentro de la carpeta `dog-dump` encontramos el archivo `settings.php`, en algunos casos podremos encontrar credenciales de usuario asi que procedo a revisarlo con `nvim settings.php`, en su caso pueden usar cualquier otro editor de texto, como `nano`, `gedit` o simplemtente visualizar su contenido con `cat` o `bat`. 

![Settings.php](/assets/img/dog/settings_php.png)
_ls al directorio padre del .git_

Dentro del archivo `settings.php` vemos que se encuentran las credenciales del usuraio `root` para `mysql`, aunque de momento no podremos usarlo debido a que para poder usarlo es necesario tener una coneccion por `reverse shell` o `ssh` 

![settingsphp_root](/assets/img/dog/settings_php_root.png)
_settings.php_

Probe dichas credenciales para intentar acceder al portal de `login` pero no funciono.

![6-login](/assets/img/dog/6_login.png)
_Portal de login_

Con el comando `git log` vemos que el domio es `@dog.htb`; para poder usar el comando git, es necesario que esten en el directorio padre del proyecto git que hemos reconstruido al inicio.

![7-gitlog](/assets/img/dog/7-gitlog.png)
_git log_

Con esto en cuenta procedemos a filtrar a todos los usuarios con `git grep @dog.htb`.

![8-gitgrep](/assets/img/dog/8-gitgrep.png)
_git grep @dog.htb_

Vemos que hemos encontrado un usuario, asi que procedo a probar logearme a la pagina web usando las credenciales de  `mysql` que encontramos previamete.

![9-logn](/assets/img/dog/9-login.png)
_Registro con las credenciales previamente encontradas_

Bingo, hemos ingresado al CMS, ahora nos dirigimos a la seccion de `User accounts` y vemos que el usuario con el que nos hemos logeado tiene el rol de administrador.

![10-users](/assets/img/dog/10-users.png)
_Roles de usuario_

Previamente en el archivo `settings.php` especificaba que la version de `BackDrop` es `1.27.1` asi que procedemos a buscar que vulnerabilidades tiene y encontramos que es vulnerable a `RCE`.

![11-cve](/assets/img/dog/11-cve.png)
_RCE_

Viendo mas a fondo el exploit, vemos que  este crea un archivo `.zip` el cual contentra una carpeta con dos achivos dentro, un archivo `.info` y un archivo `.php`; basicamente nos ha generado un plugin para BackDrop.

![11-plugin](/assets/img/dog/11-plugin.png)
_Plugin para BackDrop_

Lo descomprimimos e ingresamos a la carpeta `shell`.
![12-plugin](/assets/img/dog/12-plugin.png)
_Contenido delplugin_

Ahora lo que haremos sera editar el archivo `.php` para introducir nuestro `reverse shell`; una vez editado nos dirigiremos a la seccion de instalacion manual de plugins, aqui veremos que solo esta permitidos algunos formatos, asi que lo probare con la extencion `.tar.gz`.
![13-plugin](/assets/img/dog/13-plugin.png)
_Instalacion manual del plugin_

Vemos que se ha subido nuestro modulo con el `reverse shell`: 

![reverse-shell](/assets/img/dog/15-reverseshell.png)
